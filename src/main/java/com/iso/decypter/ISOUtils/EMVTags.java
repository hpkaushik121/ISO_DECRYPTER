package com.iso.decypter.ISOUtils;

import java.util.HashMap;

public class EMVTags {
    HashMap<String, EMVTag> tag=new HashMap<>();
    private static EMVTags instance;
    private  EMVTags(){
        tag.put("9F01",new EMVTag("9F01","Acquirer Identifier Uniquely","identifies the acquirer within each payment system"));
        tag.put("9F40",new EMVTag("9F40","Additional Terminal Capabilities","	Indicates the data input and output capabilities of the terminal"));
        tag.put("81",new EMVTag("81","Amount, Authorised (Binary)","Authorised amount of the transaction (excluding adjustments)"));
        tag.put("9F02",new EMVTag("9F02","Amount, Authorised (Numeric)","	Authorised amount of the transaction (excluding adjustments)"));
        tag.put("9F04",new EMVTag("9F04","Amount, Other (Binary)","	Secondary amount associated with the transaction representing a cashback amount"));
        tag.put("9F03",new EMVTag("9F03","Amount, Other (Numeric)","	Secondary amount associated with the transaction representing a cashback amount"));
        tag.put("9F3A",new EMVTag("9F3A","Amount, Reference Currency","Authorised amount expressed in the reference currency"));
        tag.put("9F26",new EMVTag("9F26","Application Cryptogram","	Cryptogram returned by the ICC in response of the GENERATE AC command"));
        tag.put("9F42",new EMVTag("9F42","Application Currency Code","	Indicates the currency in which the account is managed according to ISO 4217"));
        tag.put("9F44",new EMVTag("9F44","Application Currency Exponent","	Indicates the implied position of the decimal point from the right of the amount represented according to ISO 4217"));
        tag.put("9F05",new EMVTag("9F05","Application Discretionary Data","Issuer or payment system specified data relating to the application"));
        tag.put("5F25",new EMVTag("5F25","Application Effective Date","	Date from which the application may be used"));
        tag.put("5F24",new EMVTag("5F24","Application Expiration Date","	Date after which application expires"));
        tag.put("94",new EMVTag("94","Application File Locator (AFL)","	Indicates the location (SFI, range of records) of the AEFs related to a given application"));
        tag.put("4F",new EMVTag("4F","Application Identifier (AID)","card	Identifies the application as described in ISO/IEC 7816-5"));
        tag.put("9F06",new EMVTag("9F06","Application Identifier (AID)","terminal	Identifies the application as described in ISO/IEC 7816-5"));
        tag.put("82",new EMVTag("82","Application Interchange Profile","	Indicates the capabilities of the card to support specific functions in the application"));
        tag.put("50",new EMVTag("50","Application Label","	Mnemonic associated with the AID according to ISO/IEC 7816-5"));
        tag.put("9F12",new EMVTag("9F12","Application Preferred Name","Preferred mnemonic associated with the AID"));
        tag.put("5A",new EMVTag("5A","Application Primary Account Number (PAN)","	Valid cardholder account number"));
        tag.put("5F34",new EMVTag("5F34","Application Primary Account Number (PAN) Sequence Number","	Identifies and differentiates cards with the same PAN"));
        tag.put("87",new EMVTag("87","Application Priority Indicator","Indicates the priority of a given application or group of applications in a directory"));
        tag.put("9F3B",new EMVTag("9F3B","Application Reference Currency","	1–4 currency codes used between the terminal and the ICC when the Transaction Currency Code is different from the Application Currency Code; each code is 3 digits according to ISO 4217"));
        tag.put("9F43",new EMVTag("9F43","Application Reference Currency","Exponent	Indicates the implied position of the decimal point from the right of the amount, for each of the 1–4 reference currencies represented according to ISO 4217"));
        tag.put("61",new EMVTag("61","Application Template","	Contains one or more data objects relevant to an application directory entry according to ISO/IEC 7816-5"));
        tag.put("9F36",new EMVTag("9F36","Application Transaction Counter (ATC)","Counter maintained by the application in the ICC (incrementing the ATC is managed by the ICC)"));
        tag.put("9F07",new EMVTag("9F07","Application Usage Control","	Indicates issuer’s specified restrictions on the geographic usage and services allowed for the application"));
        tag.put("9F08",new EMVTag("9F08","Application Version Number","	Version number assigned by the payment system for the application"));
        tag.put("9F09",new EMVTag("9F09","Application Version Number","	Version number assigned by the payment system for the application"));
        tag.put("89",new EMVTag("89","Authorisation Code","	Value generated by the authorisation authority for an approved transaction"));
        tag.put("8A",new EMVTag("8A","Authorisation Response Code","	Code that defines the disposition of a message"));
        tag.put("5F54",new EMVTag("5F54","Bank Identifier Code (BIC)","	Uniquely identifies a bank as defined in ISO 9362."));
        tag.put("8C",new EMVTag("8C","Card Risk Management Data Object List 1 (CDOL1)","List of data objects (tag and length) to be passed to the ICC in the first GENERATE AC command"));
        tag.put("8D",new EMVTag("8D","Card Risk Management Data Object List 2 (CDOL2)","	List of data objects (tag and length) to be passed to the ICC in the second GENERATE AC command"));
        tag.put("5F20",new EMVTag("5F20","Cardholder Name","	Indicates cardholder name according to ISO 7813"));
        tag.put("9F0B",new EMVTag("9F0B","Cardholder Name Extended","	Indicates the whole cardholder name when greater than 26 characters using the same coding convention as in ISO 7813"));
        tag.put("8E",new EMVTag("8E","Cardholder Verification Method (CVM)","List	Identifies a method of verification of the cardholder supported by the application"));
        tag.put("9F34",new EMVTag("9F34","Cardholder Verification Method (CVM) Results","Indicates the results of the last CVM performed"));
        tag.put("8F",new EMVTag("8F","Certification Authority Public Key Index","	Identifies the certification authority’s public key in conjunction with the RID"));
        tag.put("9F22",new EMVTag("9F22","Certification Authority Public Key Index","	Identifies the certification authority’s public key in conjunction with the RID"));
        tag.put("83",new EMVTag("83","Command Template","	Identifies the data field of a command message"));
        tag.put("9F27",new EMVTag("9F27","Cryptogram","Information Data	Indicates the type of cryptogram and the actions to be performed by the terminal"));
        tag.put("9F45",new EMVTag("9F45","Data Authentication Code","	An issuer assigned value that is retained by the terminal during the verification process of the Signed Static Application Data"));
        tag.put("84",new EMVTag("84","Dedicated File (DF) Name","	Identifies the name of the DF as described in ISO/IEC 7816-4"));
        tag.put("9D",new EMVTag("9D","Directory Definition File (DDF) Name","	Identifies the name of a DF associated with a directory"));
        tag.put("73",new EMVTag("73","Directory Discretionary Template","Issuer discretionary part of the directory according to ISO/IEC 7816-5"));
        tag.put("9F49",new EMVTag("9F49","Dynamic Data Authentication","Data Object List (DDOL)	List of data objects (tag and length) to be passed to the ICC in the INTERNAL AUTHENTICATE command"));
        tag.put("70",new EMVTag("70","EMV Proprietary Template","	Template proprietary to the EMV specification"));
        tag.put("BF0C",new EMVTag("BF0C","File Control Information (FCI)","Issuer Discretionary Data	Issuer discretionary part of the FCI"));
        tag.put("A5",new EMVTag("A5","File Control Information (FCI) Proprietary Template","	Identifies the data object proprietary to this specification in the FCI template according to ISO/IEC 7816-4"));
        tag.put("6F",new EMVTag("6F","File Control Information (FCI) Template","	Identifies the FCI template according to ISO/IEC 7816-4"));
        tag.put("9F4C",new EMVTag("9F4C","ICC Dynamic Number","Time-variant number generated by the ICC, to be captured by the terminal"));
        tag.put("9F2D",new EMVTag("9F2D","Integrated Circuit Card (ICC) PIN Encipherment Public Key Certificate","	ICC PIN Encipherment Public Key certified by the issuer"));
        tag.put("9F2E",new EMVTag("9F2E","Integrated Circuit Card (ICC) PIN Encipherment Public Key Exponent","ICC PIN Encipherment Public Key Exponent used for PIN encipherment"));
        tag.put("9F2F",new EMVTag("9F2F","Integrated Circuit Card (ICC) PIN Encipherment Public Key Remainder","	Remaining digits of the ICC PIN Encipherment Public Key Modulus"));
        tag.put("9F46",new EMVTag("9F46","Integrated Circuit Card (ICC) Public Key Certificate","ICC Public Key certified by the issuer"));
        tag.put("9F47",new EMVTag("9F47","Integrated Circuit Card (ICC) Public Key Exponent","	ICC Public Key Exponent used for the verification of the Signed Dynamic Application Data"));
        tag.put("9F48",new EMVTag("9F48","Integrated Circuit Card (ICC) Public Key Remainder","	Remaining digits of the ICC Public Key Modulus"));
        tag.put("9F1E",new EMVTag("9F1E","Interface Device (IFD) Serial Number","	Unique and permanent serial number assigned to the IFD by the manufacturer"));
        tag.put("5F53",new EMVTag("5F53","International Bank Account Number (IBAN)","	Uniquely identifies the account of a customer at a financial institution as defined in ISO 13616."));
        tag.put("9F0D",new EMVTag("9F0D","Issuer Action Code","Default	Specifies the issuer’s conditions that cause a transaction to be rejected if it might have been approved online, but the terminal is unable to process the transaction online"));
        tag.put("9F0E",new EMVTag("9F0E","Issuer Action Code","Denial	Specifies the issuer’s conditions that cause the denial of a transaction without attempt to go online"));
        tag.put("9F0F",new EMVTag("9F0F","Issuer Action Code","Online	Specifies the issuer’s conditions that cause a transaction to be transmitted online"));
        tag.put("9F10",new EMVTag("9F10","Issuer Application Data","Contains proprietary application data for transmission to the issuer in an online transaction"));
        tag.put("91",new EMVTag("91","Issuer Authentication Data","Data sent to the ICC for online issuer authentication"));
        tag.put("9F11",new EMVTag("9F11","Issuer Code Table Index","	Indicates the code table according to ISO/IEC 8859 for displaying the Application Preferred Name"));
        tag.put("5F28",new EMVTag("5F28","Issuer Country Code","	Indicates the country of the issuer according to ISO 3166"));
        tag.put("5F55",new EMVTag("5F55","Issuer Country Code (alpha2 format)","	Indicates the country of the issuer as defined in ISO 3166 (using a 2 character alphabetic code)"));
        tag.put("5F56",new EMVTag("5F56","Issuer Country Code (alpha3 format)","Indicates the country of the issuer as defined in ISO 3166 (using a 3 character alphabetic code)"));
        tag.put("42",new EMVTag("42","Issuer Identification Number (IIN)","The number that identifies the major industry and the card issuer and that forms the first part of the Primary Account Number (PAN)"));
        tag.put("",new EMVTag("","90	Issuer Public Key Certificate","Issuer public key certified by a certification authority"));
        tag.put("9F32",new EMVTag("9F32","Issuer Public Key Exponent","	Issuer public key exponent used for theverification of the Signed Static Application Data and the ICC Public Key Certificate"));
        tag.put("92",new EMVTag("92","Issuer Public Key Remainder","Remaining digits of the Issuer Public Key Modulus"));
        tag.put("86",new EMVTag("86","Issuer Script Command","	Contains a command for transmission to the ICC"));
        tag.put("9F18",new EMVTag("9F18","Issuer Script Identifier","	Identification of the Issuer Script"));
        tag.put("71",new EMVTag("71","Issuer Script Template 1","	Contains proprietary issuer data for transmission to the ICC before the second GENERATE AC command"));
        tag.put("72",new EMVTag("72","Issuer Script Template 2","	Contains proprietary issuer data for transmission to the ICC after the second GENERATE AC command"));
        tag.put("5F50",new EMVTag("5F50","Issuer URL","	The URL provides the location of the Issuer’s Library Server on the Internet."));
        tag.put("5F2D",new EMVTag("5F2D","Language Preference	1–4","languages stored in order of preference, each represented by 2 alphabetical characters according to ISO 639 Note: EMVCo strongly recommends that cards be personalised with data element '5F2D' coded in lowercase, but that terminals accept the data element whether it is coded in upper or lower case."));
        tag.put("9F13",new EMVTag("9F13","Last Online Application Transaction Counter (ATC)","Register	ATC value of the last transaction that went online"));
        tag.put("9F4D",new EMVTag("9F4D","Log Entry","	Provides the SFI of the Transaction Log file and its number of records"));
        tag.put("9F4F",new EMVTag("9F4F","Log Format","	List (in tag and length format) of data objects representing the logged data elements that are passed to the terminal when a transaction log record is read"));
        tag.put("9F14",new EMVTag("9F14","Lower Consecutive Offline","Limit	Issuer-specified preference for the maximum number of consecutive offline transactions for this ICC application allowed in a terminal with online capability"));
        tag.put("9F15",new EMVTag("9F15","Merchant Category Code","	Classifies the type of business being done by the merchant, represented according to ISO 8583:1993 for Card Acceptor Business Code"));
        tag.put("9F16",new EMVTag("9F16","Merchant Identifier","	When concatenated with the Acquirer Identifier, uniquely identifies a given merchant"));
        tag.put("9F4E",new EMVTag("9F4E","Merchant Name and Location","	Indicates the name and location of the merchant"));
        tag.put("9F17",new EMVTag("9F17","Personal Identification Number (PIN) Try Counter","Number of PIN tries remaining"));
        tag.put("9F39",new EMVTag("9F39","Point-of-Service (POS) Entry Mode","Indicates the method by which the PAN was entered, according to the first two digits of the ISO 8583:1987 POS Entry Mode"));
        tag.put("9F38",new EMVTag("9F38","Processing Options Data Object List (PDOL)","	Contains a list of terminal resident data objects (tags and lengths) needed by the ICC in processing the GET PROCESSING OPTIONS command"));
        tag.put("80",new EMVTag("80","Response Message Template Format 1","	Contains the data objects (without tags and lengths) returned by the ICC in response to a command"));
        tag.put("77",new EMVTag("77","Response Message Template Format 2","	Contains the data objects (with tags and lengths) returned by the ICC in response to a command"));
        tag.put("5F30",new EMVTag("5F30","Service Code","	Service code as defined in ISO/IEC 7813 for track 1 and track 2"));
        tag.put("88",new EMVTag("88","Short File Identifier (SFI)	Identifies","the SFI to be used in the commands related to a given AEF or DDF. The SFI data object is a binary field with the three high order bits set to zero."));
        tag.put("9F4B",new EMVTag("9F4B","Signed Dynamic Application Data","	Digital signature on critical application parameters for DDA or CDA"));
        tag.put("93",new EMVTag("93","Signed Static Application Data","Digital signature on critical application parameters for SDA"));
        tag.put("9F4A",new EMVTag("9F4A","Static Data Authentication Tag List","	List of tags of primitive data objects defined in this specification whose value fields are to be included in the Signed Static or Dynamic Application Data"));
        tag.put("9F33",new EMVTag("9F33","Terminal Capabilities","	Indicates the card data input, CVM, and security capabilities of the terminal"));
        tag.put("9F1A",new EMVTag("9F1A","Terminal Country Code","	Indicates the country of the terminal, represented according to ISO 3166"));
        tag.put("9F1B",new EMVTag("9F1B","Terminal Floor Limit","	Indicates the floor limit in the terminal in conjunction with the AID"));
        tag.put("9F1C",new EMVTag("9F1C","Terminal Identification	Designates","the unique location of a terminal at a merchant"));
        tag.put("9F1D",new EMVTag("9F1D","Terminal Risk Management Data","	Application-specific value used by the card for risk management purposes"));
        tag.put("9F35",new EMVTag("9F35","Terminal Type","Indicates the environment of the terminal, its communications capability, and its operational control"));
        tag.put("95",new EMVTag("95","Terminal Verification Results","	Status of the different functions as seen from the terminal"));
        tag.put("9F1F",new EMVTag("9F1F","Track 1 Discretionary Data","	Discretionary part of track 1 according to ISO/IEC 7813"));
        tag.put("9F20",new EMVTag("9F20","Track 2 Discretionary Data","	Discretionary part of track 2 according to ISO/IEC 7813"));
        tag.put("57",new EMVTag("57","Track 2 Equivalent Data","	Contains the data elements of track 2 according to ISO/IEC 7813, excluding start sentinel, end sentinel, and Longitudinal Redundancy Check (LRC), as follows: Primary Account Number (n, var. up to 19) Field Separator (Hex 'D') (b) Expiration Date (YYMM) (n 4) Service Code (n 3) Discretionary Data (defined by individual payment systems) (n, var.) Pad with one Hex 'F' if needed to ensure whole bytes (b)"));
        tag.put("98",new EMVTag("98","Transaction Certificate (TC)","Hash Value	Result of a hash function specified in Book 2, Annex B3.1"));
        tag.put("97",new EMVTag("97","Transaction Certificate Data","Object List (TDOL)	List of data objects (tag and length) to be used by the terminal in generating the TC Hash Value"));
        tag.put("5F2A",new EMVTag("5F2A","Transaction Currency Code","	Indicates the currency code of the transaction according to ISO 4217"));
        tag.put("5F36",new EMVTag("5F36","Transaction Currency Exponent","	Indicates the implied position of the decimal point from the right of the transaction amount represented according to ISO 4217"));
        tag.put("9A",new EMVTag("9A","Transaction Date","Local date that the transaction was authorised"));
        tag.put("99",new EMVTag("99","Transaction Personal Identification Number (PIN) Data","	Data entered by the cardholder for the purpose of the PIN verification"));
        tag.put("9F3C",new EMVTag("9F3C","Transaction Reference Currency Code","	Code defining the common currency used by the terminal in case the Transaction Currency Code is different from the Application Currency Code"));
        tag.put("9F3D",new EMVTag("9F3D","Transaction Reference Currency","Exponent	Indicates the implied position of the decimal point from the right of the transaction amount, with the Transaction Reference Currency Code represented according to ISO 4217"));
        tag.put("9F41",new EMVTag("9F41","Transaction Sequence Counter","	Counter maintained by the terminal that is incremented by one for each transaction"));
        tag.put("9B",new EMVTag("9B","Transaction Status Information","	Indicates the functions performed in a transaction"));
        tag.put("9F21",new EMVTag("9F21","Transaction Time","	Local time that the transaction was authorised"));
        tag.put("9C",new EMVTag("9C","Transaction Type","Indicates the type of financial transaction, represented by the first two digits of ISO 8583:1987 Processing Code"));
        tag.put("9F37",new EMVTag("9F37","Unpredictable Number","	Value to provide variability and uniqueness to the generation of a cryptogram"));
        tag.put("9F23",new EMVTag("9F23","Upper Consecutive Offline Limit","	Issuer-specified preference for the maximum number of consecutive offline transactions for this ICC application allowed in a terminal without online capability"));
    }
    public static EMVTags getInstance(){
        if(instance==null){
            instance=new EMVTags();
        }
        return instance;
    }
    public String getTitle(String tag){
        return this.tag.get(tag).getTitle();
    }


}
